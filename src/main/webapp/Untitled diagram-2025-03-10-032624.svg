# APM0001114 - Blaze Application
# Authentication Modernization Test Plan

## Test Case Details

### Test ID: AUTH-001
**Module:** Authentication  
**Test Description:** Verify user can login with valid Microsoft credentials  
**Test Steps:**  
1. Navigate to login page
2. Click "Sign in with Microsoft"
3. Enter valid credentials
4. Complete authentication  

**Expected Result:** User is successfully authenticated and redirected to home page with proper user information displayed  
**Actual Result:** User successfully authenticates and is redirected to the home page displaying their profile information and token expiration details.  
**Status:** ☐ Pass ☐ Fail  
**Screenshot:** [Attach Screenshot]

---

### Test ID: AUTH-002
**Module:** Authentication  
**Test Description:** Verify state parameter validation  
**Test Steps:**  
1. Tamper with state parameter during OAuth flow
2. Complete authentication flow  

**Expected Result:** Application rejects the authentication with "Invalid state parameter" error  
**Actual Result:**  
**Status:** ☐ Pass ☐ Fail  
**Screenshot:** [Attach Screenshot]

---

### Test ID: AUTH-003
**Module:** Authentication  
**Test Description:** Verify PKCE code challenge  
**Test Steps:**  
1. Intercept authentication request
2. Verify PKCE code_challenge is present
3. Complete authentication flow  

**Expected Result:** Authentication flow includes PKCE parameters for additional security  
**Actual Result:**  
**Status:** ☐ Pass ☐ Fail  
**Screenshot:** [Attach Screenshot]

---

### Test ID: AUTH-004
**Module:** Authentication  
**Test Description:** Verify authentication fails with invalid credentials  
**Test Steps:**  
1. Navigate to login page
2. Click "Sign in with Microsoft"
3. Enter invalid credentials  

**Expected Result:** User authentication fails and error message is displayed  
**Actual Result:**  
**Status:** ☐ Pass ☐ Fail  
**Screenshot:** [Attach Screenshot]

---

### Test ID: AUTH-005
**Module:** Authentication  
**Test Description:** Verify logout flow  
**Test Steps:**  
1. Login successfully
2. Click Logout button
3. Verify redirect to Azure AD logout endpoint
4. Verify post-logout redirect  

**Expected Result:** User is completely logged out, session is cleared, and user is redirected to login page with logout message  
**Actual Result:** User is successfully logged out and session is invalidated. User is redirected to login page with a message confirming successful logout.  
**Status:** ☐ Pass ☐ Fail  
**Screenshot:** [Attach Screenshot]

---

### Test ID: SESS-001
**Module:** Session Management  
**Test Description:** Verify token expiration handling  
**Test Steps:**  
1. Login successfully
2. Wait until token expiration time (or simulate expiration)
3. Attempt to access a protected resource  

**Expected Result:** User is redirected to login page with token expired message  
**Actual Result:** When token expires, the application correctly detects this and redirects the user to the login page with a message indicating session expiration.  
**Status:** ☐ Pass ☐ Fail  
**Screenshot:** [Attach Screenshot]

---

### Test ID: SESS-002
**Module:** Session Management  
**Test Description:** Verify session timeout  
**Test Steps:**  
1. Login successfully
2. Remain inactive for session timeout period (1 minute)
3. Attempt to access a protected resource  

**Expected Result:** User is redirected to login page with session timeout message  
**Actual Result:**  
**Status:** ☐ Pass ☐ Fail  
**Screenshot:** [Attach Screenshot]

---

### Test ID: SESS-003
**Module:** Session Management  
**Test Description:** Verify session fixation protection  
**Test Steps:**  
1. Start an unauthenticated session
2. Note session ID
3. Authenticate in that session
4. Verify session ID changes  

**Expected Result:** Session ID changes after authentication (migrateSession policy)  
**Actual Result:**  
**Status:** ☐ Pass ☐ Fail  
**Screenshot:** [Attach Screenshot]

---

### Test ID: SESS-004
**Module:** Session Management  
**Test Description:** Verify concurrent session control  
**Test Steps:**  
1. Login with user credentials on browser A
2. Without logging out, login with same credentials on browser B
3. Return to browser A and attempt to access a resource  

**Expected Result:** Application allows only one active session (configurable behavior)  
**Actual Result:**  
**Status:** ☐ Pass ☐ Fail  
**Screenshot:** [Attach Screenshot]

---

### Test ID: SESS-005
**Module:** Session Management  
**Test Description:** Verify token expiration countdown  
**Test Steps:**  
1. Login successfully
2. Navigate to home page
3. Verify token expiration time is displayed
4. Verify countdown updates correctly  

**Expected Result:** Token expiration time is correctly displayed and updated  
**Actual Result:**  
**Status:** ☐ Pass ☐ Fail  
**Screenshot:** [Attach Screenshot]

---

### Test ID: AUTHZ-001
**Module:** Authorization  
**Test Description:** Verify admin role access  
**Test Steps:**  
1. Login as user with admin role
2. Navigate to /admin/home
3. Verify access is granted  

**Expected Result:** User can access admin page with all admin functionality available  
**Actual Result:** Admin user successfully accesses admin dashboard with all admin features available.  
**Status:** ☐ Pass ☐ Fail  
**Screenshot:** [Attach Screenshot]

---

### Test ID: AUTHZ-002
**Module:** Authorization  
**Test Description:** Verify regular user role restrictions  
**Test Steps:**  
1. Login as regular user without admin role
2. Attempt to navigate to /admin/home
3. Verify access is denied  

**Expected Result:** User is redirected to access denied page with appropriate error message  
**Actual Result:** Regular user is correctly redirected to access denied page when attempting to access admin resources.  
**Status:** ☐ Pass ☐ Fail  
**Screenshot:** [Attach Screenshot]

---

### Test ID: AUTHZ-003
**Module:** Authorization  
**Test Description:** Verify role-based menu items  
**Test Steps:**  
1. Login as admin user
2. Verify admin dashboard link is visible on home page
3. Login as regular user
4. Verify admin dashboard link is not visible  

**Expected Result:** UI elements are correctly shown/hidden based on user roles  
**Actual Result:**  
**Status:** ☐ Pass ☐ Fail  
**Screenshot:** [Attach Screenshot]

---

### Test ID: AUTHZ-004
**Module:** Authorization  
**Test Description:** Verify direct URL access restriction  
**Test Steps:**  
1. Login as regular user
2. Attempt to directly access restricted URL by typing in browser
3. Verify access is denied  

**Expected Result:** Direct URL manipulation is prevented with proper access controls  
**Actual Result:**  
**Status:** ☐ Pass ☐ Fail  
**Screenshot:** [Attach Screenshot]

---

### Test ID: AUTHZ-005
**Module:** Authorization  
**Test Description:** Verify user with multiple roles  
**Test Steps:**  
1. Configure a user with multiple roles in database
2. Login as that user
3. Verify all appropriate role-based access is granted  

**Expected Result:** User has access to all features appropriate for their assigned roles  
**Actual Result:**  
**Status:** ☐ Pass ☐ Fail  
**Screenshot:** [Attach Screenshot]

---

### Test ID: SEC-001
**Module:** Security  
**Test Description:** Verify HTTPS enforcement  
**Test Steps:**  
1. Attempt to access application via HTTP
2. Observe redirect behavior  

**Expected Result:** Application enforces HTTPS with proper redirect  
**Actual Result:**  
**Status:** ☐ Pass ☐ Fail  
**Screenshot:** [Attach Screenshot]

---

### Test ID: SEC-002
**Module:** Security  
**Test Description:** Verify protection against session hijacking  
**Test Steps:**  
1. Login successfully
2. Extract session token
3. Attempt to use token in different browser/device  

**Expected Result:** Session cannot be transferred to another client  
**Actual Result:**  
**Status:** ☐ Pass ☐ Fail  
**Screenshot:** [Attach Screenshot]

---

### Test ID: SEC-003
**Module:** Security  
**Test Description:** Verify secure cookie attributes  
**Test Steps:**  
1. Login successfully
2. Examine cookies set by application
3. Verify HttpOnly and Secure flags are present  

**Expected Result:** Cookies have proper security attributes  
**Actual Result:**  
**Status:** ☐ Pass ☐ Fail  
**Screenshot:** [Attach Screenshot]

---

### Test ID: SEC-004
**Module:** Security  
**Test Description:** Verify SQL injection protection  
**Test Steps:**  
1. Login with username containing SQL injection attempt (e.g., "admin' OR '1'='1")
2. Verify login fails  

**Expected Result:** Application prevents SQL injection attacks  
**Actual Result:**  
**Status:** ☐ Pass ☐ Fail  
**Screenshot:** [Attach Screenshot]

---

### Test ID: SEC-005
**Module:** Security  
**Test Description:** Verify custom headers and CSP  
**Test Steps:**  
1. Login successfully
2. Examine response headers
3. Verify security headers are present  

**Expected Result:** Response includes appropriate security headers  
**Actual Result:**  
**Status:** ☐ Pass ☐ Fail  
**Screenshot:** [Attach Screenshot]

---

### Test ID: ERR-001
**Module:** Error Handling  
**Test Description:** Verify handling of Azure AD service outage  
**Test Steps:**  
1. Simulate Azure AD service unavailability
2. Attempt to login
3. Verify application handles error gracefully  

**Expected Result:** User-friendly error message is displayed with appropriate guidance  
**Actual Result:** Application displays a user-friendly error message indicating authentication service is unavailable and provides guidance for the user.  
**Status:** ☐ Pass ☐ Fail  
**Screenshot:** [Attach Screenshot]

---

### Test ID: ERR-002
**Module:** Error Handling  
**Test Description:** Verify handling of database connection failure  
**Test Steps:**  
1. Disable database connection
2. Attempt to login with valid Microsoft credentials
3. Verify error handling  

**Expected Result:** Application handles database failure gracefully with proper error message  
**Actual Result:**  
**Status:** ☐ Pass ☐ Fail  
**Screenshot:** [Attach Screenshot]

---

### Test ID: ERR-003
**Module:** Error Handling  
**Test Description:** Verify handling of token with missing claims  
**Test Steps:**  
1. Modify authentication flow to remove email claim
2. Complete authentication flow
3. Verify application response  

**Expected Result:** Application detects missing claim and shows appropriate error  
**Actual Result:** Application correctly identifies missing email claim and displays appropriate error message in debug page.  
**Status:** ☐ Pass ☐ Fail  
**Screenshot:** [Attach Screenshot]

---

### Test ID: ERR-004
**Module:** Error Handling  
**Test Description:** Verify cross-site request forgery protection  
**Test Steps:**  
1. Login successfully
2. Attempt to perform state-changing action from external site
3. Verify CSRF protection  

**Expected Result:** CSRF attacks are prevented  
**Actual Result:**  
**Status:** ☐ Pass ☐ Fail  
**Screenshot:** [Attach Screenshot]

---

### Test ID: ERR-005
**Module:** Error Handling  
**Test Description:** Verify network disconnection during authentication  
**Test Steps:**  
1. Start authentication flow
2. Disconnect network before flow completes
3. Reconnect and verify application state  

**Expected Result:** Application handles network interruption gracefully  
**Actual Result:**  
**Status:** ☐ Pass ☐ Fail  
**Screenshot:** [Attach Screenshot]

---

### Test ID: INT-001
**Module:** Integration  
**Test Description:** Verify integration with H2 database  
**Test Steps:**  
1. Login with valid credentials
2. Verify user data is correctly retrieved from database
3. Check user roles mapping  

**Expected Result:** User profile and roles are correctly mapped from database records  
**Actual Result:**  
**Status:** ☐ Pass ☐ Fail  
**Screenshot:** [Attach Screenshot]

---

### Test ID: INT-002
**Module:** Integration  
**Test Description:** Verify debug logging functionality  
**Test Steps:**  
1. Perform various authentication flows
2. Access debug logs page
3. Verify appropriate events are logged  

**Expected Result:** Authentication events are properly logged with sufficient detail  
**Actual Result:** Debug logs correctly capture authentication events with detailed information for troubleshooting.  
**Status:** ☐ Pass ☐ Fail  
**Screenshot:** [Attach Screenshot]

---

### Test ID: INT-003
**Module:** Integration  
**Test Description:** Verify token cache functionality  
**Test Steps:**  
1. Login successfully
2. Access token cache debug page
3. Verify token is stored in cache  

**Expected Result:** Tokens are correctly cached for performance  
**Actual Result:**  
**Status:** ☐ Pass ☐ Fail  
**Screenshot:** [Attach Screenshot]

---

### Test ID: INT-004
**Module:** Integration  
**Test Description:** Verify responsive design on mobile devices  
**Test Steps:**  
1. Access login page on mobile device
2. Complete authentication flow
3. Navigate through application  

**Expected Result:** Application is fully functional and correctly displayed on mobile devices  
**Actual Result:**  
**Status:** ☐ Pass ☐ Fail  
**Screenshot:** [Attach Screenshot]

---

### Test ID: INT-005
**Module:** Integration  
**Test Description:** Verify browser compatibility  
**Test Steps:**  
1. Test authentication flow on multiple browsers (Chrome, Firefox, Safari, Edge)
2. Verify consistent behavior  

**Expected Result:** Authentication works consistently across all major browsers  
**Actual Result:**  
**Status:** ☐ Pass ☐ Fail  
**Screenshot:** [Attach Screenshot]
